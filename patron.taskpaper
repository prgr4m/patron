Patron:
My task list of things to do while developing this application since no one has 
opened up an issue :(
	General:
		- patron logo
		- requirements file... after each addon...
	Cli Parser:
		- argcompletion for linux?
	Project Scaffolding:
		- clean up and remove certain frontend elements offered by frontend addon
	Documentation:
		- list of package dependencies by addon
		- urls pointing to other project documentation for user convenience
		- each feature gets its own page also explaining why I've done things the way they are
		- add commands documentation that are injected by each addon
		- create list of packages being used by each addon and why
	Form Generator:
		- field import injector
	Static Site Generator:
		- add as an addon (later)
	Base:
		- move all things considered front-end out
	Blueprints:
		- if admin addon is present; create admin.py file
	Patron Config:
	Model Generator:
		- shorter commands without losing meaning? explicit is better than implicit...
		- if admin addon present, generate admin.py models... and auto register with admin
		- see if I can shorten it so mccabe doesn't complain (parse_model_fields, parse_relations)
	Front-End Addon:
	Admin Addon:
		- fix admin scaffolding to create media in static directory
		- when adding addon, scan pre-existing directories and auto generate model admins and auto register
		- change logout in admin to point to users.logout
	Users Addon:
		- change commands on creating superuser to be able to run more than once
		- remove duplicate delete user command
		- fix delete user command and not delete a role
		- commands should use wtforms for cli validation
		- change auth to point to users.login users.logout
	Injectors:
		- refactor and break out into each scaffolds section
		- make injections user configurable
  Addons:
		API:
			- httpauth with (itsdangerous)tokens
		Sitemap:
			- this should be an addon and taken out of the base scaffold
		Blog:
			- add back on after being polished and depends on sitemap
			- add whooshalchemy if using models
			- choice between flat-pages or not
			- choice to add frozen flask

Archive:
	- move generators into main package (rewrite but keep old files until end of refactor) @done(2014-11-15) @project(opened up an issue  / General)
	- possibly its own cli subgroup for adding and autoregistration (after addon is present) @done(2014-11-15) @project(  Addons / API)
	- should be able to create methods/function routes on cli as well @done(2014-11-15) @project(opened up an issue  / Blueprints)
	- make view only care about view and move everything into its own admin.py @done(2014-11-15) @project(opened up an issue  / Admin Addon)
	- make login, logout and registration public routes via injection @done(2014-11-15) @project(opened up an issue  / Admin Addon)
	- break out user models and management into its own component/package @done(2014-11-15) @project(opened up an issue  / Admin Addon)
	- user package inject login and principal @done(2014-11-15) @project(opened up an issue  / Users Addon)
	- remove jade templates and move into spa/app @done(2014-11-14) @project(opened up an issue  / Front-End Addon)
	- make sure watch is provided for flask portion of jade files @done(2014-11-14) @project(opened up an issue  / Front-End Addon)
	- remove non images from frontend in assets directory @done(2014-11-14) @project(opened up an issue  / Front-End Addon)
	- update cli documentation for models @done(2014-11-13) @project(opened up an issue  / Model Generator)
	- double check the relations declaration... backref_name-value @done(2014-11-13) @project(opened up an issue  / Model Generator)
	- adaptable parser pending on scaffold type @done(2014-11-10) @project(opened up an issue  / Cli Parser)
	- modify lookups not based on blueprints/addons but by resources @done(2014-11-10) @project(opened up an issue  / Cli Parser)
	- remove from project @done(2014-11-10) @project(opened up an issue  / Static Site Generator)
	- redo to be simplistic but with minimum info to get job done @done(2014-11-10) @project(opened up an issue  / Patron Config)
	- python 3.x support @done(2014-11-04) @project(opened up an issue  / General)
